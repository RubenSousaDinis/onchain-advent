{
  "address": "0xE9Ed5e02Dc88e9E337c8F563F7C2B4921289f5F8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exerciseId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exerciseId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Sponsored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exerciseId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "Whitelisted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "exerciseId",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claimedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "exerciseRewardClaimers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "exerciseRewardPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxClaimersPerExercise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "exerciseId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sponsorships",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSponsorships",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "exerciseId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "whitelistWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedRewardsAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6be6bacb1575213e4f5071a4c6b18f0b7836c9d699574d5d7f1186798bcff24b",
  "receipt": {
    "to": null,
    "from": "0x436cA2299e7fDF36C4b1164cA3e80081E68c318A",
    "contractAddress": "0xE9Ed5e02Dc88e9E337c8F563F7C2B4921289f5F8",
    "transactionIndex": 7,
    "gasUsed": "597926",
    "logsBloom": "0x
    "blockHash": "0x0abb0c4581cfb2409e12e6d9dd4130e835c266d3d12057947b1332459c1d35eb",
    "transactionHash": "0x6be6bacb1575213e4f5071a4c6b18f0b7836c9d699574d5d7f1186798bcff24b",
    "logs": [],
    "blockNumber": 16191219,
    "cumulativeGasUsed": "945191",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x436cA2299e7fDF36C4b1164cA3e80081E68c318A"
  ],
  "numDeployments": 2,
  "solcInputHash": "2f37ffea2b4eb32d395373ff2a322e72",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exerciseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exerciseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Sponsored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exerciseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exerciseId\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exerciseRewardClaimers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exerciseRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxClaimersPerExercise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exerciseId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sponsorships\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSponsorships\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exerciseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"whitelistWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedRewardsAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"BuidlGuidl\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sponsor()\":{\"notice\":\"Function that allows anyone to sponsor\"}},\"notice\":\"A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the owner to withdraw the Ether in the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rewardsContract.sol\":\"RewardsContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/rewardsContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n// Use openzeppelin to inherit battle-tested implementations (ERC20, ERC721, etc)\\n// import \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * A smart contract that allows changing a state variable of the contract and tracking the changes\\n * It also allows the owner to withdraw the Ether in the contract\\n * @author BuidlGuidl\\n */\\ncontract RewardsContract {\\n\\t// State Variables\\n\\taddress public immutable owner;\\n\\tuint256 public totalSponsorships = 0;\\n\\tuint256 public maxClaimersPerExercise = 100;\\n\\tmapping(address => uint) public sponsorships;\\n\\t// Mapping to track rewards by ID\\n\\tmapping(uint256 => uint256) public exerciseRewardPool;\\n\\tmapping(uint256 => uint256) public exerciseRewardClaimers;\\n\\tmapping(uint256 => mapping(address => bool))\\n\\t\\tpublic whitelistedRewardsAddresses;\\n\\tmapping(address => mapping(uint256 => uint256)) public claimedRewards;\\n\\n\\t// Events: a way to emit log statements from smart contract that can be listened to by external parties\\n\\tevent Sponsored(address indexed sponsor, uint256 value);\\n\\n\\tevent RewardSet(uint256 exerciseId, uint256 amount);\\n\\tevent Whitelisted(uint256 exerciseId, address wallet);\\n\\tevent RewardClaimed(\\n\\t\\taddress indexed claimant,\\n\\t\\tuint256 exerciseId,\\n\\t\\tuint256 amount\\n\\t);\\n\\n\\t// Events: a way to emit log statements from smart contract that can be listened to by external parties\\n\\tevent RewardClaimed(address indexed sponsor, uint256 value);\\n\\n\\t// Modifier to restrict access to the owner\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"Caller is not the owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t// Constructor: Called once on contract deployment\\n\\t// Check packages/hardhat/deploy/00_deploy_your_contract.ts\\n\\tconstructor(address _owner) {\\n\\t\\towner = _owner;\\n\\t}\\n\\n\\t// Modifier: used to define a set of rules that must be met before or after a function is executed\\n\\t// Check the withdraw() function\\n\\tmodifier isOwner() {\\n\\t\\t// msg.sender: predefined variable that represents address of the account that called the current function\\n\\t\\trequire(msg.sender == owner, \\\"Not the Owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * Function that allows anyone to sponsor\\n\\t *\\n\\t */\\n\\tfunction sponsor() public payable {\\n\\t\\trequire(msg.value > 0, \\\"Sponsorship amount must be greater than 0\\\");\\n\\n\\t\\t// Update the sponsor's total contributions\\n\\t\\tsponsorships[msg.sender] += msg.value;\\n\\n\\t\\t// Increment total sponsorship amount\\n\\t\\ttotalSponsorships += msg.value;\\n\\n\\t\\t// Emit Sponsored event\\n\\t\\temit Sponsored(msg.sender, msg.value);\\n\\t}\\n\\n\\t// Function to set rewards, can only be called by the owner\\n\\tfunction setReward(uint256 exerciseId, uint256 amount) external onlyOwner {\\n\\t\\trequire(amount > 0, \\\"Reward amount must be greater than 0\\\");\\n\\n\\t\\t// Set the reward amount for the specified ID\\n\\t\\texerciseRewardPool[exerciseId] = amount;\\n\\n\\t\\t// Emit RewardSet event\\n\\t\\temit RewardSet(exerciseId, amount);\\n\\t}\\n\\n\\t// Function to set rewards, can only be called by the owner\\n\\tfunction whitelistWallet(\\n\\t\\tuint256 exerciseId,\\n\\t\\taddress wallet\\n\\t) external onlyOwner {\\n\\t\\trequire(\\n\\t\\t\\texerciseRewardClaimers[exerciseId] < maxClaimersPerExercise,\\n\\t\\t\\t\\\"Max winners reached\\\"\\n\\t\\t);\\n\\n\\t\\t// Set the reward amount for the specified ID\\n\\t\\texerciseRewardClaimers[exerciseId] += 1;\\n\\t\\twhitelistedRewardsAddresses[exerciseId][wallet] = true;\\n\\n\\t\\t// Emit RewardSet event\\n\\t\\temit Whitelisted(exerciseId, wallet);\\n\\t}\\n\\n\\t// Function for whitelisted wallets to claim rewards\\n\\tfunction claimReward(uint256 exerciseId) external {\\n\\t\\tuint256 totalRewardAmount = exerciseRewardPool[exerciseId];\\n\\t\\trequire(totalRewardAmount > 0, \\\"Reward not set for this ID\\\");\\n\\t\\trequire(\\n\\t\\t\\twhitelistedRewardsAddresses[exerciseId][msg.sender],\\n\\t\\t\\t\\\"Not whitelisted\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tclaimedRewards[msg.sender][exerciseId] == 0,\\n\\t\\t\\t\\\"Reward already claimed\\\"\\n\\t\\t);\\n\\n\\t\\tuint256 rewardAmount = totalRewardAmount / maxClaimersPerExercise;\\n\\n\\t\\t// Mark reward as claimed\\n\\t\\tclaimedRewards[msg.sender][exerciseId] = rewardAmount;\\n\\n\\t\\t// Transfer the reward to the claimant\\n\\t\\t(bool success, ) = payable(msg.sender).call{value: rewardAmount}(\\\"\\\");\\n\\t\\trequire(success, \\\"Reward claim failed\\\");\\n\\n\\t\\t// Emit RewardClaimed event\\n\\t\\temit RewardClaimed(msg.sender, exerciseId, rewardAmount);\\n\\t}\\n\\n\\t// Fallback function to accept plain ETH transfers\\n\\treceive() external payable {\\n\\t\\tsponsor();\\n\\t}\\n}\\n\",\"keccak256\":\"0x9ec8244a4faec46cd9c5238c565fedba9784755f123e729b669610fbcd1d05b6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260008055606460015534801561001957600080fd5b50604051610a05380380610a0583398101604081905261003891610049565b6001600160a01b0316608052610079565b60006020828403121561005b57600080fd5b81516001600160a01b038116811461007257600080fd5b9392505050565b6080516109636100a26000396000818161017a015281816103a101526104bf01526109636000f3fe6080604052600436106100ab5760003560e01c8063a47bd49611610064578063a47bd496146101e1578063a7d7536e14610201578063ae169a5014610221578063cf78c9d914610241578063f45829bf14610257578063fb831b9a1461028457600080fd5b80637315ab50146100bf57806374dcca7e146100e857806377c936621461011557806384d991b01461011d5780638da5cb5b14610168578063a100d967146101b457600080fd5b366100ba576100b86102bc565b005b600080fd5b3480156100cb57600080fd5b506100d560005481565b6040519081526020015b60405180910390f35b3480156100f457600080fd5b506100d5610103366004610815565b60046020526000908152604090205481565b6100b86102bc565b34801561012957600080fd5b5061015861013836600461084a565b600560209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100df565b34801561017457600080fd5b5061019c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100df565b3480156101c057600080fd5b506100d56101cf366004610876565b60026020526000908152604090205481565b3480156101ed57600080fd5b506100b86101fc366004610898565b610396565b34801561020d57600080fd5b506100b861021c36600461084a565b6104b4565b34801561022d57600080fd5b506100b861023c366004610815565b610603565b34801561024d57600080fd5b506100d560015481565b34801561026357600080fd5b506100d5610272366004610815565b60036020526000908152604090205481565b34801561029057600080fd5b506100d561029f3660046108ba565b600660209081526000928352604080842090915290825290205481565b600034116103235760405162461bcd60e51b815260206004820152602960248201527f53706f6e736f727368697020616d6f756e74206d75737420626520677265617460448201526806572207468616e20360bc1b60648201526084015b60405180910390fd5b33600090815260026020526040812080543492906103429084906108e4565b925050819055503460008082825461035a91906108e4565b909155505060405134815233907fbb2c10eb8b0d65523a501a1c079906e38af3c4231e31b799d408daacd7ce72269060200160405180910390a2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104085760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015260640161031a565b600081116104645760405162461bcd60e51b8152602060048201526024808201527f52657761726420616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b606482015260840161031a565b60008281526003602090815260409182902083905581518481529081018390527fb1364803920b7aa08b58c240c989062d8ebd96ab4bd352792350afbab26c823991015b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105265760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015260640161031a565b6001546000838152600460205260409020541061057b5760405162461bcd60e51b815260206004820152601360248201527213585e081dda5b9b995c9cc81c995858da1959606a1b604482015260640161031a565b600082815260046020526040812080546001929061059a9084906108e4565b909155505060008281526005602090815260408083206001600160a01b03851680855290835292819020805460ff191660011790558051858152918201929092527f2279719af4080e08a5a2b25c8234a83b76079141524127d1096409ac07fa5d0f91016104a8565b6000818152600360205260409020548061065f5760405162461bcd60e51b815260206004820152601a60248201527f526577617264206e6f742073657420666f722074686973204944000000000000604482015260640161031a565b600082815260056020908152604080832033845290915290205460ff166106ba5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161031a565b3360009081526006602090815260408083208584529091529020541561071b5760405162461bcd60e51b815260206004820152601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b604482015260640161031a565b60006001548261072b919061090b565b336000818152600660209081526040808320888452909152808220849055519293509183908381818185875af1925050503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b50509050806107d45760405162461bcd60e51b815260206004820152601360248201527214995dd85c990818db185a5b4819985a5b1959606a1b604482015260640161031a565b604080518581526020810184905233917ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743910160405180910390a250505050565b60006020828403121561082757600080fd5b5035919050565b80356001600160a01b038116811461084557600080fd5b919050565b6000806040838503121561085d57600080fd5b8235915061086d6020840161082e565b90509250929050565b60006020828403121561088857600080fd5b6108918261082e565b9392505050565b600080604083850312156108ab57600080fd5b50508035926020909101359150565b600080604083850312156108cd57600080fd5b6108d68361082e565b946020939093013593505050565b8082018082111561090557634e487b7160e01b600052601160045260246000fd5b92915050565b60008261092857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ef790ed6deceed4fdc05750b557d5ab452cee17b6c19e00e23c04c0aaa8d675264736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c8063a47bd49611610064578063a47bd496146101e1578063a7d7536e14610201578063ae169a5014610221578063cf78c9d914610241578063f45829bf14610257578063fb831b9a1461028457600080fd5b80637315ab50146100bf57806374dcca7e146100e857806377c936621461011557806384d991b01461011d5780638da5cb5b14610168578063a100d967146101b457600080fd5b366100ba576100b86102bc565b005b600080fd5b3480156100cb57600080fd5b506100d560005481565b6040519081526020015b60405180910390f35b3480156100f457600080fd5b506100d5610103366004610815565b60046020526000908152604090205481565b6100b86102bc565b34801561012957600080fd5b5061015861013836600461084a565b600560209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100df565b34801561017457600080fd5b5061019c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100df565b3480156101c057600080fd5b506100d56101cf366004610876565b60026020526000908152604090205481565b3480156101ed57600080fd5b506100b86101fc366004610898565b610396565b34801561020d57600080fd5b506100b861021c36600461084a565b6104b4565b34801561022d57600080fd5b506100b861023c366004610815565b610603565b34801561024d57600080fd5b506100d560015481565b34801561026357600080fd5b506100d5610272366004610815565b60036020526000908152604090205481565b34801561029057600080fd5b506100d561029f3660046108ba565b600660209081526000928352604080842090915290825290205481565b600034116103235760405162461bcd60e51b815260206004820152602960248201527f53706f6e736f727368697020616d6f756e74206d75737420626520677265617460448201526806572207468616e20360bc1b60648201526084015b60405180910390fd5b33600090815260026020526040812080543492906103429084906108e4565b925050819055503460008082825461035a91906108e4565b909155505060405134815233907fbb2c10eb8b0d65523a501a1c079906e38af3c4231e31b799d408daacd7ce72269060200160405180910390a2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104085760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015260640161031a565b600081116104645760405162461bcd60e51b8152602060048201526024808201527f52657761726420616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b606482015260840161031a565b60008281526003602090815260409182902083905581518481529081018390527fb1364803920b7aa08b58c240c989062d8ebd96ab4bd352792350afbab26c823991015b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105265760405162461bcd60e51b815260206004820152601760248201527621b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015260640161031a565b6001546000838152600460205260409020541061057b5760405162461bcd60e51b815260206004820152601360248201527213585e081dda5b9b995c9cc81c995858da1959606a1b604482015260640161031a565b600082815260046020526040812080546001929061059a9084906108e4565b909155505060008281526005602090815260408083206001600160a01b03851680855290835292819020805460ff191660011790558051858152918201929092527f2279719af4080e08a5a2b25c8234a83b76079141524127d1096409ac07fa5d0f91016104a8565b6000818152600360205260409020548061065f5760405162461bcd60e51b815260206004820152601a60248201527f526577617264206e6f742073657420666f722074686973204944000000000000604482015260640161031a565b600082815260056020908152604080832033845290915290205460ff166106ba5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161031a565b3360009081526006602090815260408083208584529091529020541561071b5760405162461bcd60e51b815260206004820152601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b604482015260640161031a565b60006001548261072b919061090b565b336000818152600660209081526040808320888452909152808220849055519293509183908381818185875af1925050503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b50509050806107d45760405162461bcd60e51b815260206004820152601360248201527214995dd85c990818db185a5b4819985a5b1959606a1b604482015260640161031a565b604080518581526020810184905233917ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743910160405180910390a250505050565b60006020828403121561082757600080fd5b5035919050565b80356001600160a01b038116811461084557600080fd5b919050565b6000806040838503121561085d57600080fd5b8235915061086d6020840161082e565b90509250929050565b60006020828403121561088857600080fd5b6108918261082e565b9392505050565b600080604083850312156108ab57600080fd5b50508035926020909101359150565b600080604083850312156108cd57600080fd5b6108d68361082e565b946020939093013593505050565b8082018082111561090557634e487b7160e01b600052601160045260246000fd5b92915050565b60008261092857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ef790ed6deceed4fdc05750b557d5ab452cee17b6c19e00e23c04c0aaa8d675264736f6c63430008110033",
  "devdoc": {
    "author": "BuidlGuidl",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "sponsor()": {
        "notice": "Function that allows anyone to sponsor"
      }
    },
    "notice": "A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the owner to withdraw the Ether in the contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8092,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "totalSponsorships",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8095,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "maxClaimersPerExercise",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 8099,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "sponsorships",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8103,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "exerciseRewardPool",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 8107,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "exerciseRewardClaimers",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 8113,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "whitelistedRewardsAddresses",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 8119,
        "contract": "contracts/rewardsContract.sol:RewardsContract",
        "label": "claimedRewards",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}